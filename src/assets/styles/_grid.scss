@use "sass:math";

$grid-columns: 12;

$grid-gaps: (
	"0": 0,
	"1": 10px,
	"2": 20px,
	"3": 30px,
);

$layout-values: flex-start, flex-end, center, space-between, space-around;

.container {
	box-sizing: border-box;
	width: 100%;
	max-width: 1200px;
	margin: 0 auto;
	padding: 0 20px;
}

.row {
	display: flex;
	flex-flow: row wrap;
}

// grid gaps
@each $key, $val in $grid-gaps {
	.gap-#{$key} > * {
		// all of the items inside the gap-3 for example
		padding: $val;
	}

	.gap-#{$key} {
		margin-right: -$val;
		margin-left: -$val; // removes the gap on left and right sides
	}
}

// justify content classes
@each $val in $layout-values {
	.justify-#{$val} {
		justify-content: $val;
	}
}

// col classes
@include xs {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-xs {
			flex-grow: 0;
			box-sizing: border-box;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include sm {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-sm {
			flex-grow: 0;
			box-sizing: border-box;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include md {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-md {
			flex-grow: 0;
			box-sizing: border-box;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include lg {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-lg {
			flex-grow: 0;
			box-sizing: border-box;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include xl {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-xl {
			flex-grow: 0;
			box-sizing: border-box;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
